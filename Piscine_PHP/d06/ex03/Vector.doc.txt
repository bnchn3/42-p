
<- Vector ----------------------------------------------------------------------
The Vector class handles 3D vectors.

An instance can be constructed from a destination vertex, using the Vertex class:
new Vector(array('dest' => new Vertex(array('x' => 0, 'y' => '0', 'z' => '0'))));

An origin vertex can also be provided:
new Vector(array('dest' => new Vertex(...), 'orig' => new Vertex(...)));

If no origin is provided, the origin is instantiated as a vertex at 
x = 0, y = 0, z = 0, w = 1.

Getter functions are provided for each coordinate. 
No setter functions are provided, once instantiated the properties do not change.

Provided methods include:

float magnitude() :	returns the vector's length

Vector normalize() : returns a normalized version of the vector, as long as
		as long as the vector has a nonzero length. If the vector
		is already normalized, returns a fresh copy of the vector.

Vector add(Vector $vec) : returns the sum vector of both vectors

Vector sub(Vector $vec) : returns the difference vector of both vectors

Vector opposite() : returns the opposite vector

Vector scalarProduct(float $num) : returns the multiplication of the vector
				with a scalar

float dotProduct(Vector $vec) : returns the dot product of both vectors

float cos(Vector $vec) : returns the cosine of the angle between both vectors

Vector crossProduct(Vector $vec) : returns the cross product of both vectors
---------------------------------------------------------------------- Vector ->
